import time
import argparse
import numpy as np

import options as melissa_options

from melissa4py.message import SimulationData
from melissa4py.server import MelissaServer


def do_stuff(data, parameters, timestep):
    print(data, parameters, timestep)


def main(args):
    server = MelissaServer(args.timesteps,
                           args.nb_proc_server,
                           args.nb_parameters_simulation,
                           text_pull_port=args.txt_pull_port,
                           text_push_port=args.txt_push_port,
                           text_request_port=args.txt_req_port,
    			           launcher_node_name=args.launcher_node_name,
                           learning=2,
                           fields=['heat1'])
    samples = 0
    while True:
        status = server.run(timeout=100)
        if isinstance(status, SimulationData):
            do_stuff(status.data, status.parameters, status.timestep)
            samples += 1
            if samples >= int(args.sample_size * args.timesteps / args.nb_proc_server):
                print('Recieved all samples. Stopping..')
                break
    print('Server stopping...')
    server.stop()


if __name__ == '__main__':
    print('Starting server.. ')
    parser = argparse.ArgumentParser()
    # TODO: get everything except launcher config from options
    parser.add_argument('-p', "--nb_parameters_simulation", type=int, default=5)
    parser.add_argument('-t', "--timesteps", type=int, default=1000)
    parser.add_argument('-r', "--nb_proc_server", type=int, default=1)
    parser.add_argument('-s', "--sample_size", type=int, default=1)
    parser.add_argument("--data_port", type=int, default=2005)
    parser.add_argument("--txt_req_port", type=int, default=5554)
    parser.add_argument("--txt_push_port", type=int, default=5555)
    parser.add_argument("--txt_pull_port", type=int, default=5556)
    parser.add_argument("--nb_fields", type=int, default=1)
    parser.add_argument("-n", "--launcher_node_name", type=str, default='localhost')
    args, unknown = parser.parse_known_args()
    print('arguments: ', args)
    main(args)
